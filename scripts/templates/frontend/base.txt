import type { ViewDefinition } from '~/types/view'
import { {{ capitalizedTypename }}Entity } from '~/models/entities'
import {
  generateBaseInputFields,
  generateBaseRenderFields,
  generateClickRowToOpenDialogOptions,
  generateSortOptions,
} from '~/services/view'

export const Base{{ capitalizedTypename }}View: ViewDefinition = {
  routeType: 'base',
  routeKey: {{ capitalizedTypename }}Entity.typename,
  entity: {{ capitalizedTypename }}Entity,
  inputFields: {
    ...generateBaseInputFields({{ capitalizedTypename }}Entity),
  },
  renderFields: {
    ...generateBaseRenderFields({{ capitalizedTypename }}Entity),
  },
  paginationOptions: {
    searchOptions: undefined,
    filters: [],
    ...generateClickRowToOpenDialogOptions(),
    heroOptions: {},
    sortFields: [
      ...generateSortOptions({ fieldPath: 'createdAt' }),
      ...generateSortOptions({ fieldPath: 'updatedAt' }),
    ],
    headers: [
      {
        fieldKey: 'nameWithAvatar',
        hideIfGrid: true,
      },
      {
        fieldKey: 'updatedAt',
        width: '150px',
      },
    ],
  },
  createOptions: {
    fields: [
      {
        fieldKey: 'avatarUrl',
        cols: 5,
      },
      {
        fieldKey: 'name',
        cols: 7,
      },
      'description'
    ],
  },
  updateOptions: {
    fields: [
      {
        fieldKey: 'avatarUrl',
        cols: 5,
      },
      {
        fieldKey: 'name',
        cols: 7,
      },
      'description'
    ],
  },
  viewOptions: {
    fields: ['avatarUrl', 'name', 'description'],
    heroOptions: {},
  },
  enterOptions: {},
  deleteOptions: {},
  shareOptions: {},
  childTypes: [],
}
